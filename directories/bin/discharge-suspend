#!/usr/bin/env bash
# Maintained in linux-config.org

# loop and check power levels every BAT_POWER_POLL_CYCLE seconds. When a certain
# threshold, BAT_POWER_SUSPEND_LEVEL, is reached then, unless there is
# a check file ~/.BAT_POWER_SUSPEND_SUSPEND, in which case we just repeat
# warnings, suspend in BAT_POWER_SUSPEND_TIME seconds.
# 
if [ ! -f /sys/class/power_supply/BAT0/status ];then
    exit 1
fi

rm -f ~/.BAT_POWER_SUSPEND_SUSPEND
BAT_POWER_SUSPEND_POLL_CYCLE=${BAT_POWER_SUSPEND_POLL_CYCLE:-60}
BAT_POWER_SUSPEND_LEVEL=${BAT_POWER_SUSPEND_LEVEL:-25}
BAT_POWER_SUSPEND_TIME=${BAT_POWER_SUSPEND_TIME:-600}
BAT_POWER_SUSPEND_CRITICAL_LEVEL=${BAT_POWER_SUSPEND_CRITICAL_LEVEL:-5}

BAT_POWER_SUSPEND_SUSPENDING=false

while true;  do
    sleep ${BAT_POWER_SUSPEND_POLL_CYCLE}
    mapfile -t batStats< <(cat /sys/class/power_supply/BAT0/{status,capacity})
    status=${batStats[0]}
    level=${batStats[1]}
    if [ ${status} = "Discharging" ]; then
        CRITICAL=FALSE
        if ((${level} <= ${BAT_POWER_SUSPEND_LEVEL})); then
            if ((${level} <= ${BAT_POWER_SUSPEND_CRITICAL_LEVEL}));then
                #if at a critical level then time to call it a day and suspend
                rm -f ~/.BAT_POWER_SUSPEND_SUSPEND
                BAT_POWER_SUSPEND_SUSPENDING=true
                notify-send "**CRITICIAL**" "LOW BATTERY"
                CRITICAL=true
                beepy
            fi
            # unless we're overriding the auto suspend then check if we should
            if [ ! -f ~/.BAT_POWER_SUSPEND_SUSPEND ]; then
                #if we're already in the process of suspending see if its time to suspend
                if [ ${BAT_POWER_SUSPEND_SUSPENDING} = true ]; then
                    if [ ${CRITICAL} = true ] || ((${SECONDS} >= ${BAT_POWER_SUSPEND_TIME}));then
                        notify-send "**SUSPENDING**" "in 10 SECONDS"
                        beepy
                        sleep 10
                        systemctl suspend
                        BAT_POWER_SUSPEND_SUSPENDING=false
                    else
                        notify-send "**WARNING**" "Battery low: suspending in about $((${BAT_POWER_SUSPEND_TIME}-${SECONDS}))s"
                    fi
                else
                    # initiate the suspending period
                    BAT_POWER_SUSPEND_SUSPENDING=true
                    SECONDS=0
                    notify-send "**WARNING**" "Battery low: suspending in ${BAT_POWER_SUSPEND_TIME}s"
                    beepy
                fi
            else
                # since suspend is being overridden, just warn of low battery
                BAT_POWER_SUSPEND_SUSPENDING=false
                notify-send "**WARNING**" "Battery low: ${level}%"
            fi
        fi
    else
        # we're not discharging so cancel any suspend operations
        if [ ${BAT_POWER_SUSPEND_SUSPENDING} = true ]; then
            notify-send "**Charging detected**" "Suspending cancelled"
            BAT_POWER_SUSPEND_SUSPENDING=false
            SECONDS=0
        fi
    fi
done
